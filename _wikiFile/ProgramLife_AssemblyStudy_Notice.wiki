%template ProgramLife
%toc

* 在汇编语言程序中，数据不能以字母开头，所以要在前面加0。例如，ffffh是错误的，0ffffh正确。<br />
在Debug中不加0是可以的。
* 程序被加载到内存中后，比如DS是1234的话，那么cs就是1234+10 = 1244，中间的256个字节是PSP数据区。DOS要使用这个区域和加载程序进行通信。
* 在Debug和汇编程序中，对于以下指令的处理不同。
{{{
  mov ax, [0]
  // debug中：表示将ds:0的数据送入ax中。
  // 在汇编程序中，编译后生成的指令为：mov ax, 00
  解决方法：
  	（1）将编译地址送入bx中，如mov bx,0		mov al, [bx]
  	（2）同时给出段地址和便宜地址，如mov al, ds:[0]
  }}}
* 指令要处理的数据有多长?
	# 寄存器指明了指令进行的是字操作（mov ax, 1）
	# 在没有寄存器名存在的情况下，用操作符 X ptr 指明内存单元的长度，X在汇编指令中可以用word或byte
{{{
mov word ptr ds:[0] 1
mov byte ptr ds:[0] 1
  }}}
	# 有些指令默认了访问的是子单元还是字节单元。比如push指令只进行字操作
* 所有的有条件转移指令都是短转移，在对应的机器码中包含转移的位移，而不是目的地址。对IP的修改范围：-128～127（ _*Page171*_ ）
* CPU可以直接读写3个地方的数据
	# CPU内部的寄存器
	# 内存单元
	# 端口
