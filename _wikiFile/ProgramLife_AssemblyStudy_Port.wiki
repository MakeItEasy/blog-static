%template ProgramLife
%toc

=== 端口的读写 ===
<hr>
* 端口的读写命令只有两个：in和out
* 我们看一下CPU执行内存访问指令和端口访问指令时候，总线上的信息
	# 访问内存<br />
		mov ax, ds:[8]	; 假设执行前(ds)=0<br />
		执行时与总线相关的操作：
		# CPU通过地址线将地址信息8发出
		# CPU通过控制线发出内存读命令，选中存储器芯片，并通知它，将要从中读取数据；
		# 存储器将8号单元的数据通过数据线送入CPU
	# 访问端口<br />
		in ax, 60h	; 从60h号端口读入一个字节<br />
		执行时与总线相关的操作：
		# CPU通过地址线将地址信息 60h 发出
		# CPU通过控制线发出端口读命令，选中端口所在的芯片，并通知它，将要从中读取数据；
		# 端口所在的芯片将60h号端口中的数据通过数据线送入CPU
 
=== 注意事项 ===
<hr>
* 在in和out指令中，只能使用ax和al来存放从端口中读入的数据或要发送到端口中的数据。访问8位端口时用al，16位时用ax。
* 对0～255以内的端口读写直接用数字，对256～65535的端口进行读写时，端口号放在dx中。
{{{
	in al, 20h
	out 20h, al

	mov dx, 3f8h
	in al, dx
	out dx, al
  }}}
